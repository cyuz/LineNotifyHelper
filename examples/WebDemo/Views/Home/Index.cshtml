@model IEnumerable<WebDemo.Models.UserModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


@{
    if (ViewBag.UserInfo == null)
    {
        <form method="post" asp-action="Login">
            <p>
                Name:<input type="text" name="loginName" />
                <input type="submit" value="submit" class="btn btn-outline-primary" />
            </p>
        </form>
    }
    else
    {
<p>
    @ViewBag.UserInfo.Name:
    @if (string.IsNullOrEmpty(ViewBag.UserInfo.AccessToken))
    {
        <a asp-action="ConnectLine" class="btn btn-outline-primary">Connect Line</a>
    }
    else
    {
        <a asp-action="RevokeSelf" class="btn btn-outline-primary">RevokeSelf</a>
    }
    <a asp-action="LogOut" class="btn btn-outline-primary">LogOut</a>
</p>

    }
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccessToken)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccessToken)
                </td>
                <td>
                    @{
                        if (!string.IsNullOrEmpty(item.AccessToken))
                        {
                            <a asp-action="Hello" asp-route-id="@item.Id">Hello</a>
                            <a asp-action="Revoke" asp-route-id="@item.Id">Revoke</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
